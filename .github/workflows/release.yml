name: Release

on:
  push:
    tags:
      - "v*.*.*"


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build-docker:
    runs-on: ubuntu-latest
    name: "Docker build"
    environment:
      name: image
      # package url
      url: "https://github.com/${{ github.repository }}/pkgs/container/conf-webapi"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
          tags: |
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
      - name: Echo info
        run: |-
          echo "GITHUB_REF: ${{ github.ref }}"
          echo "REGISTRY: ${{ env.REGISTRY }}"
          echo "IMAGE_NAME: ${{ env.IMAGE_NAME }}"
          echo "USER: ${{ vars.CONTAINER_REGISTRY_USER }}"
          echo "TAGS: ${{ steps.meta.outputs.tags }}"
          echo "LABELS: ${{ steps.meta.outputs.labels }}"
      - name: Login to registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ vars.CONTAINER_REGISTRY_USER }}
          password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
            context: .
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
  update-service-prod:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-docker
    runs-on: ubuntu-latest
    name: "Update service PROD"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
      - name: Update service
        run: |-
          #!/usr/bin/env bash
          set -euo pipefail

          curl --location --request PATCH 'https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}' \
            --header 'authorization: Bearer ${{ secrets.RENDER_API_KEY }}' \
            --header 'Content-Type: application/json' \
            --data '{
              "image": {
                "ownerId":"${{ secrets.RENDER_OWNER_ID }}",
                "registryCredentialId":"${{ secrets.RENDER_REGISTRY_CREDENTIAL_ID }}",
                "imagePath":"${{ steps.meta.outputs.tags }}"
              }
            }'
